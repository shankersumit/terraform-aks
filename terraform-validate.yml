trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
  - stage: 
    jobs:
      # # - job:
      #   displayName: publish artifact to pipeline workspace and validate the terraform manifest
      #   steps:
      #     -  task: PublishPipelineArtifact@1
      #        displayName: Publish artifact
      #        inputs:
      #         targetPath: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
      #         artifact: 'terraformaks'
      #         publishLocation: 'pipeline'
      #     - task: TerraformInstaller@0
      #       displayName: Install terraform
      #       inputs:
      #         terraformVersion: 'latest'
      #     - task: TerraformCLI@0
      #       displayName: Terraform Init
      #       inputs:
      #         command: 'init'
      #         workingDirectory: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
      #         backendType: 'azurerm'
      #         backendServiceArm: 'terraform-aks-svc'
      #         backendAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
      #         backendAzureRmResourceGroupName: 'terraform-tfstate-storage'
      #         backendAzureRmStorageAccountName: 'tfstatestoragebatch5'
      #         backendAzureRmContainerName: 'tfstate'
      #         backendAzureRmKey: 'terraform.tfstate'
      #         allowTelemetryCollection: false
      - deployment: 
        displayName: Terraform Validate
        environment: deploy-aks
        continueOnError: false
        strategy:
         runOnce:
           deploy:
              steps:
                - task: TerraformCLI@0
                  displayName: Terraform Init
                  inputs:
                    command: 'init'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
                    backendType: 'azurerm'
                    backendServiceArm: 'terraform-aks-svc'
                    backendAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
                    backendAzureRmResourceGroupName: 'terraform-tfstate-storage'
                    backendAzureRmStorageAccountName: 'tfstatestoragebatch5'
                    backendAzureRmContainerName: 'tfstate'
                    backendAzureRmKey: 'terraform.tfstate'
                    allowTelemetryCollection: false
                - task: TerraformCLI@0
                  displayName: Terraform Validate
                  inputs:
                    command: 'validate'
                    workingDirectory: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
                    allowTelemetryCollection: false