trigger: none

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Publish_artifact
    jobs:
      - job:
        displayName: publish artifact to pipeline workspace and validate the terraform manifest
        steps:
          -  task: PublishPipelineArtifact@1
             displayName: Publish artifact
             inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
              artifact: 'terraformaks'
              publishLocation: 'pipeline'
          - task: TerraformInstaller@0
            displayName: Install terraform
            inputs:
              terraformVersion: 'latest'
          - task: TerraformCLI@0
            displayName: Terraform Init
            inputs:
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
              backendType: 'azurerm'
              backendServiceArm: 'terraform-aks-svc'
              backendAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
              backendAzureRmResourceGroupName: 'terraform-tfstate-storage'
              backendAzureRmStorageAccountName: 'tfstatestoragebatch5'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'
              allowTelemetryCollection: false
  - stage: Deploy
    jobs:
      - deployment: Terraform Plan
        displayName: Terraform Deploy
        continueOnError: false
        strategy:
         runOnce:
           deploy:
              steps:
                - task: TerraformCLI@0
                  displayName: Terraform Init
                  inputs:
                    command: 'init'
                    workingDirectory: '$(Pipeline.Workspace)/terraformaks'
                    backendType: 'azurerm'
                    backendServiceArm: 'terraform-aks-svc'
                    backendAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
                    backendAzureRmResourceGroupName: 'terraform-tfstate-storage'
                    backendAzureRmStorageAccountName: 'tfstatestoragebatch5'
                    backendAzureRmContainerName: 'tfstate'
                    backendAzureRmKey: 'terraform.tfstate'
                    allowTelemetryCollection: false
                - task: TerraformCLI@0
                  displayName: Terraform Plan
                  inputs:
                    command: 'plan'
                    workingDirectory: '$(Pipeline.Workspace)/terraformaks'
                    environmentServiceName: 'terraform-aks-svc'
                    providerAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
                    commandOptions: '-out aksplan-$(Build.BuildId).out'
                    allowTelemetryCollection: false
                    publishPlanResults: 'aksplan'
      - deployment: 
        displayName: Terraform Apply
        environment: deployaks
        strategy:
          runOnce:
             deploy:
                steps:
                  - task: TerraformCLI@0
                    displayName: Terraform apply
                    inputs:
                      command: 'apply'
                      workingDirectory: '$(Pipeline.Workspace)/terraformaks'
                      environmentServiceName: 'terraform-aks-svc'
                      providerAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
                      commandOptions: '$(Pipeline.Workspace)/terraformaks/aksplan-$(Build.BuildId).out'
                      allowTelemetryCollection: false