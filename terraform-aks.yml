trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: TerraformValidate
  jobs:
    - job: TerraformValidateJob
      continueOnError: false
      displayName: Publish Artifacts
      steps:
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
            artifact: 'terraform-aks'
            publishLocation: 'pipeline'
        - task: TerraformCLI@0
          displayName: Terraform init
          inputs:
            command: 'init'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
            backendType: 'azurerm'
            backendServiceArm: 'terraform-aks-svc'
            backendAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
            backendAzureRmResourceGroupName: 'terraform-tfstate-storage'
            backendAzureRmStorageAccountName: 'tfstatestoragebatch5'
            backendAzureRmContainerName: 'tfstate'
            backendAzureRmKey: 'terraform.tfstate'
            allowTelemetryCollection: false
        - task: TerraformCLI@0
          displayName: Terraform Validate
          inputs:
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/terraformtest/aks_provision'
            allowTelemetryCollection: false
- stage: deployakscluster
  jobs:
    - deployment: deployakscluster
      displayName: deployakscluster
      environment: $(DEV_ENVIRONMENT)
      pool:
        vmImage: 'ubuntu-latest'
      strategy:
       runOnce:
          deploy:
             steps:
              - task: TerraformCLI@0
                displayName: Terraform Init
                inputs:
                    command: 'init'
                    workingDirectory: '$(Pipeline.Workspace)/terraform-aks'
                    backendType: 'azurerm'
                    backendServiceArm: 'terraform-aks-svc'
                    backendAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
                    backendAzureRmResourceGroupName: 'terraform-tfstate-storage'
                    backendAzureRmStorageAccountName: 'tfstatestoragebatch5'
                    backendAzureRmContainerName: 'tfstate'
                    backendAzureRmKey: 'terraform.tfstate'
                    allowTelemetryCollection: false
              - task: TerraformCLI@0
                displayName: Terraform Plan
                inputs:
                  command: 'plan'
                  workingDirectory: '$(Pipeline.Workspace)/terraform-aks'
                  environmentServiceName: 'terraform-aks-svc'
                  providerAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
                  allowTelemetryCollection: false
              - task: TerraformCLI@0
                displayName: Terraform apply
                inputs:
                  command: 'apply'
                  workingDirectory: '$(Pipeline.Workspace)/terraform-aks'
                  environmentServiceName: 'terraform-aks-svc'
                  providerAzureRmSubscriptionId: '01a0d38e-38ad-442e-be3f-ad1e760bd4f5'
                  allowTelemetryCollection: false
